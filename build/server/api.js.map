{"version":3,"sources":["../../server/api.js"],"names":["app","getCurrentUser","req","User","models","Promise","resolve","reject","session","userid","get","err","user","promiseMap","arr","fn","promises","val","push","all","res","send","test","post","then","body","title","length","description","success","Post","create","price","image","timestamp","Date","getTime","console","log","setUser","id","_id","catch","e","params","itemId","set","end","Buffer","split","Comment","ret","username","comments","getUser","find","parent_id","order","comment","map","content","hidden","toString","posts","_user","setParent","password","users","hash","str","hasher","createHmac","update","digest"],"mappings":"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","file":"api.js","sourcesContent":["\nimport crypto from 'crypto';\n\nfunction hash(str) {\n  var hasher = crypto.createHmac('sha256', 'ppooopopopo!!');\n  return hasher.update(str).digest('hex');\n}\n\nexport default function(app) {\n\n  function getCurrentUser(req) {\n    let User = req.models.User;\n\n    return new Promise((resolve, reject) => {\n      if (req.session.userid) {\n        User.get(req.session.userid, (err, user) => {\n          if (err) { reject(err) } else { resolve(user) };\n        })\n      } else {\n        reject(\"Not logged in.\");\n      }\n    })\n\n  }\n\n  function promiseMap(arr, fn) {\n    var promises = [];\n    for (var val of arr) {\n      promises.push(new Promise ((resolve, reject) => {\n        fn(val, resolve, reject);\n      }));\n    }\n\n    return Promise.all(promises);\n  }\n\n  app.get('/api', (req, res) => {\n    res.send({test: 'hi'});\n  })\n\n  app.post('/api/create', (req, res) => {\n    getCurrentUser(req).then((user) => {\n      if (!req.body.title || req.body.title.length == 0 ||\n          !req.body.description || req.body.description.length == 0) {\n        res.send({success: false});\n      } else {\n        let Post = req.models.Post\n\n        Post.create({\n          title: req.body.title,\n          description: req.body.description,\n          price: req.body.price,\n          image: req.body.image,\n          timestamp: (new Date).getTime()\n        }, (err, post) => {\n          if (err) {\n            console.log(err);\n            res.send({success: false});\n          } else {\n            post.setUser(user, (err) => {\n              if (err) { res.send({success: false, err: err}) } else { res.send({success: true, id: post._id}) }\n            });\n          }\n        })\n      }\n    }).catch((e) => {\n      res.send({success: false, err: e});\n    })\n  });\n\n  app.get('/image/:itemId', (req, res) => {\n    let Post = req.models.Post;\n    Post.get(req.params.itemId, (err, post) => {\n      if (err || !post.image) {\n        res.send(\"Error! \" + err);\n      } else {\n        res.set('Content-Type', 'image/png');\n        res.end(new Buffer(post.image.split(\",\")[1], 'base64'), 'binary');\n      }\n    })\n  })\n\n  app.get('/api/item/:itemId', (req, res) => {\n    let Post = req.models.Post;\n    let Comment = req.models.Comment;\n\n    let ret = {}\n\n    new Promise((resolve, reject) => {\n\n      Post.get(req.params.itemId, (err, post) => {\n        if (err || !post.title || !post.image) {\n          reject(err);\n        } else {\n          ret = {\n            success: true,\n            title: post.title,\n            description: post.description,\n            price: post.price,\n            user: {\n              _id: \"BLANK\",\n              username: \"BLANK\"\n            },\n            _id: post._id,\n            comments: []\n          }\n          resolve(post);\n        }\n      })\n    }).then((post) => {\n      return new Promise((resolve, reject) => {\n        post.getUser((err, user) => {\n          ret.user = user || { username: \"unavailable\" };\n          resolve();\n        })\n      })\n    }).then(() => {\n      return new Promise((resolve, reject) => {\n        Comment.find({parent_id: req.params.itemId}, {order: [\"-timestamp\"]}, (err, comments) => {\n          if (err) {\n            console.log(err);\n            reject(err);\n          } else {\n            promiseMap(comments, (comment, resolve, reject) => {\n              comment.getUser((err, user) => {\n                if (user)\n                  comment.user = { username: user.username };\n                resolve();\n              })\n            }).then(() => {\n              ret.comments = comments.map((comment) => {\n                return {\n                  _id: comment._id,\n                  content: comment.content,\n                  user: comment.user || { username: \"unavailable\" },\n                  hidden: comment.hidden\n                }\n              })\n              resolve();\n            });\n          }\n        });\n      })\n    }).then(() => {\n      res.send(ret);\n    }).catch((e) => {\n      console.log(e);\n      res.send({success: false, err: e.toString()});\n    });\n  })\n\n  app.get('/api/feed', (req, res) => {\n    let Post = req.models.Post;\n    Post.find({}, {order: [\"-timestamp\"]}, (err, posts) => {\n      if (err) {\n        res.send({\n          success: false,\n          err: err\n        })\n      } else {\n        promiseMap(posts, (post, resolve, reject) => {\n          post.getUser((err, user) => {\n            if (user)\n              post.user = { username: user.username };\n            resolve();\n          })\n        }).then(() => {\n          res.send({\n            success: true,\n            posts: posts.map((post) => {\n              return {\n                title: post.title,\n                description: post.description,\n                price: post.price,\n                user: post.user || { username: \"unavailable\" },\n                _id: post._id,\n              }\n            })\n          })\n        });\n      }\n    })\n  });\n\n  app.post('/api/comment', (req, res) => {\n    if (!req.body.content || req.body.content.length == 0) {\n      res.send({success: false});\n    } else {\n\n      let Post = req.models.Post;\n      let Comment = req.models.Comment;\n\n      let user = null;\n\n      getCurrentUser(req).then((_user) => {\n        user = _user;\n\n        return new Promise((resolve, reject) => {\n          Post.get(req.body.itemId, (err, post) => {\n            resolve(post);\n          });\n        });\n      }).then((post) => {\n        return new Promise((resolve, reject) => {\n          Comment.create({\n            content: req.body.content,\n            hidden: req.body.hidden\n          }, (err, comment) => {\n            if (err) { reject(err) } else {\n              comment.setParent(post, (err) => {\n                if (err) { reject(err) } else { resolve(comment) }\n              });\n            }\n          })\n        });\n      }).then((comment) => {\n        return new Promise((resolve, reject) => {\n          comment.setUser(user, (err) => {\n            if (err) { reject(err) } else { resolve(comment) }\n          });\n        });\n      }).then((comment) => {\n        res.send({success: true, id: comment._id});\n      }).catch((e) => {\n        console.log(e);\n        res.send({success: false, err: e});\n      })\n    }\n  });\n\n  app.get('/api/comments/:itemId', (req, res) => {\n\n    let Post = req.models.Post;\n    let Comment = req.models.Comment;\n\n\n    Comment.find({parent_id: req.params.itemId}, {order: [\"-timestamp\"]}, (err, comments) => {\n      // console.log(comments);\n      if (err) {\n        res.send({\n          success: false,\n          err: err\n        });\n      } else {\n        promiseMap(comments, (comment, resolve, reject) => {\n          comment.getUser((err, user) => {\n            if (user)\n              comment.user = { username: user.username };\n            resolve();\n          })\n        }).then(() => {\n          console.log(\"huh\");\n          res.send({\n            success: true,\n            comments: comments.map((comment) => {\n              console.log(comment.user);\n              return {\n                _id: comment._id,\n                content: comment.content,\n                user: comment.user || { username: \"unavailable\" },\n                hidden: comment.hidden\n              }\n            })\n          });\n        }).catch((e) => {\n          res.send({\n            success: false,\n            err: e.toString()\n          });\n        });\n\n      }\n    });\n  })\n\n  app.get('/api/current_user', (req, res) => {\n\n    getCurrentUser(req).then((user) => {\n      res.send({\n        success: true,\n        username: user.username\n      })\n    }).catch((e) => {\n      res.send({\n        success: false,\n        err: e.toString()\n      })\n    });\n\n  })\n\n\n  app.post('/api/logout', (req, res) => {\n    req.session.userid = null;\n    res.send({success: true});\n  });\n\n  app.post('/api/login_register', (req, res) => {\n    if (!req.body.user || req.body.user.length == 0 ||\n        !req.body.password || req.body.password.length == 0) {\n      res.send({success: false});\n    } else {\n      let User = req.models.User\n\n      new Promise((resolve, reject) => {\n\n        User.find({username: req.body.user}, (err, users) => {\n          var user = users[0];\n          if (users.length > 0 && user) {\n            if (user.password == hash(req.body.password)) {\n              req.session.userid = user._id;\n              resolve();\n            } else {\n              reject();\n            }\n          } else {\n            User.create({\n              username: req.body.user,\n              password: hash(req.body.password)\n            }, (err, user) => {\n              if (err) { reject(err) } else {\n                req.session.userid = user._id;\n                resolve()\n              }\n            });\n          }\n        });\n\n      }).then(() => {\n        res.send({success: true});\n      }).catch((e) => {\n        res.send({success: false});\n      })\n\n    }\n  });\n\n}\n"]}