{"version":3,"sources":["../../server/api.js"],"names":["app","get","req","res","send","test","post","body","title","length","description","success","Post","models","create","price","image","timestamp","Date","getTime","err","result","console","log","id","_id","params","itemId","set","end","Buffer","split","Comment","ret","Promise","resolve","reject","user","username","comments","then","find","parent_id","order","map","comment","content","hidden","catch","e","toString","posts","setParent"],"mappings":"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","file":"api.js","sourcesContent":["\nexport default function(app) {\n\n  app.get('/api', (req, res) => {\n    res.send({test: 'hi'});\n  })\n\n  app.post('/api/create', (req, res) => {\n    if (!req.body.title || req.body.title.length == 0 ||\n        !req.body.description || req.body.description.length == 0) {\n      res.send({success: false});\n    } else {\n      let Post = req.models.Post\n\n      Post.create({\n        title: req.body.title,\n        description: req.body.description,\n        price: req.body.price,\n        image: req.body.image,\n        timestamp: (new Date).getTime()\n      }, (err, result) => {\n        if (err) {\n          console.log(err);\n          res.send({success: false});\n        } else {\n          res.send({success: true, id: result._id});\n        }\n      })\n    }\n  });\n\n  app.get('/image/:itemId', (req, res) => {\n    let Post = req.models.Post;\n    Post.get(req.params.itemId, (err, post) => {\n      if (err || !post.image) {\n        res.send(\"Error! \" + err);\n      } else {\n        res.set('Content-Type', 'image/png');\n        res.end(new Buffer(post.image.split(\",\")[1], 'base64'), 'binary');\n      }\n    })\n  })\n\n  app.get('/api/item/:itemId', (req, res) => {\n    let Post = req.models.Post;\n    let Comment = req.models.Comment;\n\n    let ret = {}\n\n    new Promise((resolve, reject) => {\n\n      Post.get(req.params.itemId, (err, post) => {\n        if (err || !post.title || !post.image) {\n          reject(err);\n        } else {\n          ret = {\n            success: true,\n            title: post.title,\n            description: post.description,\n            price: post.price,\n            user: {\n              _id: \"BLANK\",\n              username: \"BLANK\"\n            },\n            _id: post._id,\n            comments: []\n          }\n          resolve();\n        }\n      })\n\n    }).then(() => {\n      return new Promise((resolve, reject) => {\n        Comment.find({parent_id: req.params.itemId}, {order: [\"-timestamp\"]}, (err, comments) => {\n          if (err) {\n            console.log(err);\n            reject(err);\n          } else {\n            ret.comments = comments.map((comment) => {\n              return {\n                _id: comment._id,\n                content: comment.content,\n                user: {\n                  _id: \"BLANK\",\n                  username: \"BLANK\"\n                },\n                hidden: comment.hidden\n              }\n            })\n            console.log(ret.comments);\n            resolve();\n          }\n        });\n      })\n    }).then(() => {\n      console.log(\"how\");\n      res.send(ret);\n    }).catch((e) => {\n      console.log(e);\n      res.send({success: false, err: e.toString()});\n    });\n  })\n\n  app.get('/api/feed', (req, res) => {\n    let Post = req.models.Post;\n    Post.find({}, {order: [\"-timestamp\"]}, (err, posts) => {\n      if (err) {\n        res.send({\n          success: false,\n          err: err\n        })\n      } else {\n        res.send({\n          success: true,\n          posts: posts.map((post) => {\n            return {\n              title: post.title,\n              description: post.description,\n              price: post.price,\n              user: {\n                _id: \"BLANK\",\n                username: \"BLANK\"\n              },\n              _id: post._id,\n            }\n          })\n        })\n      }\n    })\n  });\n\n  app.post('/api/comment', (req, res) => {\n    if (!req.body.content || req.body.content.length == 0) {\n      res.send({success: false});\n    } else {\n\n      let Post = req.models.Post;\n      let Comment = req.models.Comment;\n\n      Post.get(req.body.itemId, (err, post) => {\n        Comment.create({\n          content: req.body.content,\n          hidden: req.body.hidden\n        }, (err, comment) => {\n          if (err) {\n            res.send({success: false, err: err});\n          } else {\n            comment.setParent(post, (err) => {\n              if (err) {\n                res.send({success: false, err: err});\n              } else {\n                res.send({success: true, id: comment._id});\n              }\n            });\n          }\n        })\n      });\n    }\n  });\n\n  app.get('/api/comments/:itemId', (req, res) => {\n\n    let Post = req.models.Post;\n    let Comment = req.models.Comment;\n\n\n    Comment.find({parent_id: req.params.itemId}, {order: [\"-timestamp\"]}, (err, comments) => {\n      console.log(comments);\n      if (err) {\n        res.send({\n          success: false,\n          err: err\n        });\n      } else {\n        res.send({\n          success: true,\n          comments: comments.map((comment) => {\n            return {\n              _id: comment._id,\n              content: comment.content,\n              user: {\n                _id: \"BLANK\",\n                username: \"BLANK\"\n              },\n              hidden: comment.hidden\n            }\n          })\n        });\n      }\n    });\n  })\n\n}\n"]}