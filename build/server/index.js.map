{"version":3,"sources":["../../server/index.js"],"names":["app","use","json","limit","express","define","db","models","next","User","username","type","unique","password","String","Post","image","Buffer","title","description","price","Number","user","timestamp","Comment","parent","content","hidden","Boolean","reply","Notification","post","comment","static","listen","console","log"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,CAAgB,EAACC,OAAO,MAAR,EAAhB,CAAR;;AAEAH,IAAIC,GAAJ,CAAQ,cAAIG,OAAJ,CAAY,iCAAZ,EAA+C;AACrDC,UAAQ,UAASC,EAAT,EAAaC,MAAb,EAAqBC,IAArB,EAA2B;AACjCD,WAAOE,IAAP,GAAcH,GAAGD,MAAH,CAAU,MAAV,EAAkB;AAC9BK,gBAAU,EAACC,MAAM,MAAP,EAAeC,QAAQ,IAAvB,EADoB;AAE9BC,gBAAUC;AAFoB,KAAlB,CAAd;;AAKAP,WAAOQ,IAAP,GAAcT,GAAGD,MAAH,CAAU,MAAV,EAAkB;AAC9BW,aAAOC,MADuB;AAE9BC,aAAOJ,MAFuB;AAG9BK,mBAAaL,MAHiB;AAI9BM,aAAOC,MAJuB;AAK9BC,YAAMR,MALwB;AAM9BS,iBAAWF;AANmB,KAAlB,CAAd;;AASAd,WAAOiB,OAAP,GAAiBlB,GAAGD,MAAH,CAAU,SAAV,EAAqB;AACpCoB,cAAQX,MAD4B;AAEpCY,eAASZ,MAF2B;AAGpCQ,YAAMR,MAH8B;AAIpCa,cAAQC,OAJ4B;AAKpCC,aAAOR;AAL6B,KAArB,CAAjB;;AAQAd,WAAOuB,YAAP,GAAsBxB,GAAGD,MAAH,CAAU,cAAV,EAA0B;AAC9C0B,YAAMjB,MADwC;AAE9CkB,eAASlB,MAFqC;AAG9CQ,YAAMR;AAHwC,KAA1B,CAAtB;;AAOA;;AAEAN;AACD;AAlCoD,CAA/C,CAAR;;AAqCA,mBAAIR,GAAJ;;AAEAA,IAAIC,GAAJ,CAAQ,GAAR,EAAa,kBAAQgC,MAAR,CAAe,QAAf,CAAb;AACAjC,IAAIC,GAAJ,CAAQ,GAAR,EAAa,kBAAQgC,MAAR,CAAe,OAAf,CAAb;AACAjC,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,kBAAQgC,MAAR,CAAe,kBAAf,CAAvB;AACAjC,IAAIC,GAAJ,CAAQ,IAAR,EAAc,kBAAQgC,MAAR,CAAe,mBAAf,CAAd;;AAEAjC,IAAIkC,MAAJ,CAAW,IAAX;AACAC,QAAQC,GAAR,CAAY,sBAAZ","file":"index.js","sourcesContent":["\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport orm from 'orm';\nimport api from './api';\n\nvar app = express();\napp.use(bodyParser.json({limit: '50mb'}));\n\napp.use(orm.express('mongodb://localhost/spartanshop', {\n  define: function(db, models, next) {\n    models.User = db.define(\"User\", {\n      username: {type: \"text\", unique: true},\n      password: String\n    });\n\n    models.Post = db.define(\"Post\", {\n      image: Buffer,\n      title: String,\n      description: String,\n      price: Number,\n      user: String,\n      timestamp: Number\n    });\n\n    models.Comment = db.define(\"Comment\", {\n      parent: String,\n      content: String,\n      user: String,\n      hidden: Boolean,\n      reply: Number\n    });\n\n    models.Notification = db.define(\"Notification\", {\n      post: String,\n      comment: String,\n      user: String\n    });\n\n\n    // db.drop(function() {});\n\n    next();\n  }\n}))\n\napi(app);\n\napp.use('/', express.static('public'))\napp.use('/', express.static('build'))\napp.use('/thirdparty', express.static('bower_components'))\napp.use('/*', express.static('public/index.html'))\n\napp.listen(8080);\nconsole.log(\"Listening on 8080...\");\n"]}